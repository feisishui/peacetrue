buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE'
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
    }
}

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
}

description 'an parent module for peacetrue'

allprojects {

    apply plugin: 'io.spring.dependency-management'
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:1.4.1.RELEASE"
        }

        dependencies {
            dependency "com.google.code.findbugs:jsr305:1.3.9"
            dependency 'com.google.guava:guava:24.1-jre'
            dependency 'org.projectlombok:lombok:1.16.20'
            dependency "javax.json:javax.json-api:1.1"
            dependency 'org.reflections:reflections:0.9.9-RC1'
            dependency 'org.jooq:jool:0.9.13'// for Java 9+
            dependency 'org.jooq:jool-java-8:0.9.13'// for Java 8
            dependency 'org.aspectj:aspectjweaver:1.8.9'
            dependency 'mysql:mysql-connector-java:5.1.39'
            dependency 'com.h2database:h2:1.4.196'
            dependency 'org.mybatis:mybatis:3.4.0'
            dependency 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2'
            dependency "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final"
            dependency 'org.hibernate:hibernate-core:5.2.11.Final'
            dependency 'org.hibernate:hibernate-entitymanager:5.2.16.Final'
            dependency "javax.servlet:javax.servlet-api:3.1.0"
            dependency 'org.hibernate:hibernate-validator:5.2.4.Final'
            dependency 'org.apache.commons:commons-lang3:3.1'
            dependency 'io.github.benas:random-beans:3.7.0'
        }
    }

    group 'com.github.peacetrue'
    version '1.0-SNAPSHOT'
//    version '1.2-SNAPSHOT'

    apply plugin: 'java'
    sourceCompatibility = 1.8

    repositories {
        if (gradle.hasProperty("repository_url")) {
            //use local repository in ~/.gradle/init.d
            maven { url gradle.repository_url }
        } else {
            mavenCentral()
            maven { url "https://repo.spring.io/libs-release" }
            maven { url "https://repo.spring.io/snapshot" }
            maven { url "https://dl.bintray.com/rabbitmq/maven-milestones" }
            maven { url "https://plugins.gradle.org/m2/" }
            maven { url "https://oss.sonatype.org/content/groups/public" }
            maven { url "https://oss.sonatype.org/content/groups/staging" }
        }
    }

    dependencies {
        testCompile "junit:junit"
        testCompile "io.github.benas:random-beans"
        testCompile "org.projectlombok:lombok"
    }

    sourceSets {
        test {
            resources {
                srcDirs += "src/test/java"
            }
        }
    }

    apply plugin: 'maven'
    apply plugin: 'signing'
    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }

    def repository_snapshots = gradle.hasProperty("repository_snapshots") ? gradle.repository_snapshots : 'https://oss.sonatype.org/repositories/snapshots/'
    def repository_releases = gradle.hasProperty("repository_releases") ? gradle.repository_releases : 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
    def repository_username = gradle.hasProperty("repository_username") ? gradle.repository_username : '你仓库的用户名'
    def repository_password = gradle.hasProperty("repository_password") ? gradle.repository_password : '你仓库的密码'

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: repository_releases) {
                    authentication(userName: repository_username, password: repository_password)
                }

                snapshotRepository(url: repository_snapshots) {
                    authentication(userName: repository_username, password: repository_password)
                }

                pom.project {
                    name project.name
                    packaging 'jar'
                    groupId project.group
//                    version project.version
                    // optionally artifactId can be defined here
                    description project.description //TODO when this be applied, project.description have't be init
                    url 'https://github.com/peacetrue/peacetrue'

                    scm {
                        url 'https://github.com/peacetrue/peacetrue'
                        connection 'https://github.com/peacetrue/peacetrue.git'
                        developerConnection 'https://github.com/peacetrue/peacetrue.git'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'xiayouxue'
                            name 'xiayouxue'
                            email 'xiayouxue@hotmail.com'
                        }
                    }
                }
            }
        }
    }
}